@page "/peliculas/editar/{PeliculaId:int}"
@attribute [Authorize(Roles = "admin")]
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService swal


<h3>Editar Pelicula</h3>

@if (Pelicula is null)
{
    <p>Cargando...</p>
}
else
{
    <FormularioPeliculas Pelicula="Pelicula" OnValidSummit="Editar"
    GenerosNoSeleccionados="GenerosNoSeleccionados" GenerosSeleccionados="GenerosSeleccionados"
    ActoresSeleccionados="ActoresSeleccionados">
</FormularioPeliculas>
}

@code {
    [Parameter] public int PeliculaId { get; set; }

    Peliculas? Pelicula;

    private List<GeneroCls> GenerosNoSeleccionados = new List<GeneroCls>();

    private List<GeneroCls> GenerosSeleccionados = new List<GeneroCls>();

    private List<Actor> ActoresSeleccionados = new List<Actor>();

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<PeliculaActualizacionDTO>($"/api/peliculas/actualizar/{PeliculaId}");
        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/");
            }
            else
            {
                var mensajeError = await httpResponse.GetErrorMessageAsync();
                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        }
        else
        {
            var modelo = httpResponse.Response;
            ActoresSeleccionados = modelo!.Actores;
            GenerosNoSeleccionados = modelo.GenerosNoSeleccionados;
            GenerosSeleccionados = modelo.GenerosSeleccionados;
            Pelicula = modelo.Pelicula!;
        }
    }


    private async Task Editar()
    {
        var respuestaHttp = await repositorio.Put("api/peliculas", Pelicula);
        if (respuestaHttp.Error)
        {
            var mensajeError = await respuestaHttp.GetErrorMessageAsync();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            navigationManager.NavigateTo($"/pelicula/{PeliculaId}");
        }
    }
}
