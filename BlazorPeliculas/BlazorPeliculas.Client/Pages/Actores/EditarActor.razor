@page "/actores/editar/{ActorId:int}"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService swal

<h3>Editar Actores</h3>

@if (Actor is null)
{
    <p>Cargando...</p>    
}
else
{
    <FormularioActores Actor="Actor" OnValitSubmit="Editar" />
}

@code {
    [Parameter] public int ActorId { get; set; }

    Actor? Actor;

    protected override async Task OnInitializedAsync()
    {
        var respuestaHttp = await repositorio.Get<Actor>($"/api/actores/{ActorId}");
        if (respuestaHttp.Error)
        {
            if (respuestaHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/actores");
            }
            else
            {
                var mensajeError = await respuestaHttp.GetErrorMessageAsync();
                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        }
        else
        {
            Actor = respuestaHttp.Response;
        }
    }

    private async void Editar()
    {
        var respuestaHttp = await repositorio.Put("api/actores", Actor);
        if (respuestaHttp.Error)
        {
            var mensajeError = await respuestaHttp.GetErrorMessageAsync();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            navigationManager.NavigateTo("/actores");
        }
    }
}
